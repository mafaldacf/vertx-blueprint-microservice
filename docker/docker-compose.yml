version: '3.4'

services:
  config-server:
    image: httpd:alpine
    ports:
      - "8000:80"
    volumes:
      - ${DIR}/config-server:/usr/local/apache2/htdocs:ro
  mysql:
    image: mysql:latest
    expose:
      - "3306"
    environment:
      - MYSQL_ROOT_PASSWORD=666666
      - MYSQL_DATABASE=vertx_blueprint
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-p666666"]
      interval: 10s
      timeout: 3s
      retries: 15
  mongo:
    image: mongo:latest
    expose:
      - "27017"
    healthcheck:
      test: ["CMD-SHELL", "mongosh --quiet --eval 'quit((db.adminCommand({ ping: 1 }).ok)?0:2)'"]
      interval: 10s
      timeout: 5s
      retries: 12
  keycloak-server:
    image: quay.io/keycloak/keycloak:latest
    command: start-dev
    ports:
      - "8080:8080"
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    restart: unless-stopped
  redis:
    image: redis:latest
    expose:
      - "6379"
  elasticsearch:
    image: elasticsearch:6.5.0
    ports:
      - "9200:9200"
      - "9300:9300"
    #command: elasticsearch
    environment:
      ES_JAVA_OPTS: "-Xms1g -Xmx1g"
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:9200/"]
      interval: 10s
      timeout: 3s
      retries: 30
  logstash:
    image: logstash:6.5.2
    ports:
      - "12201:12201/udp"
    command: -e 'input { gelf { host => "0.0.0.0" port => 12201 } }
              output { elasticsearch { hosts => ["elasticsearch"] } }'
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:9600/"]  # logstash node info
      interval: 15s
      timeout: 5s
      retries: 20
  kibana:
    image: kibana:7.3.0
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      elasticsearch:
        condition: service_healthy
  inventory-microservice:
    image: mafaldacf/inventory-microservice
    depends_on:
      config-server:
        condition: service_healthy
      mongo:
        condition: service_healthy
      logstash:
        condition: service_healthy
    expose:
      - "8086"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8086/health"]
      interval: 10s
      timeout: 3s
      retries: 20
  product-microservice:
    image: mafaldacf/product-microservice
    depends_on:
      mysql:
        condition: service_healthy
      logstash:
        condition: service_healthy
    expose:
      - "8082"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8082/health"]
      interval: 10s
      timeout: 3s
      retries: 20
  account-microservice:
    image: mafaldacf/account-microservice
    depends_on:
      mysql:
        condition: service_healthy
      logstash:
        condition: service_healthy
    restart: unless-stopped
    expose:
      - "8081"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8081/health"]
      interval: 10s
      timeout: 3s
      retries: 20
  store-microservice:
    image: mafaldacf/store-microservice
    depends_on:
      mongo:
        condition: service_healthy
      logstash:
        condition: service_healthy
    expose:
      - "8085"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8085/health"]
      interval: 10s
      timeout: 3s
      retries: 20
    networks:
      default:
        aliases:
          - store-microservice
  cache-infrastructure:
    image: mafaldacf/cache-infrastructure
    links:
      - redis
      - logstash
    depends_on:
      - redis
      - logstash
  shopping-cart-microservice:
    image: mafaldacf/shopping-cart-microservice
    links:
      - mysql
      - logstash
      - inventory-microservice
      - product-microservice
      - cache-infrastructure
    depends_on:
      - mysql
      - logstash
    expose:
      - "8084"
  order-microservice:
    image: mafaldacf/order-microservice
    links:
      - mysql
      - logstash
    depends_on:
      - mysql
      - logstash
      - shopping-cart-microservice
      - inventory-microservice
    expose:
      - "8090"
  monitor-dashboard:
    image: mafaldacf/monitor-dashboard
    ports:
      - "9100:9100"
    links:
      - logstash
    depends_on:
      - logstash
  api-gateway:
    image: mafaldacf/api-gateway
    ports:
      - "8787:8787"
    environment:
      - JAVA_OPTS="-Xms128m -Xmx256m"
    depends_on:
      account-microservice:
        condition: service_healthy
      product-microservice:
        condition: service_healthy
      inventory-microservice:
        condition: service_healthy
      shopping-cart-microservice:
        condition: service_healthy
      order-microservice:
        condition: service_healthy
      store-microservice:
        condition: service_healthy
      keycloak-server:
        condition: service_started
    restart: unless-stopped
    extra_hosts:
      - "dockernet:${EXTERNAL_IP}"
